{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport anecdoteService from '../services/anecdote';\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    createAnecdote(state, action) {\n      state.push(action.payload);\n    },\n    voteOf(state, action) {\n      const voteToChange = state.find(anecdote => anecdote.id === action.payload);\n      const changedVote = {\n        ...voteToChange,\n        votes: voteToChange.votes + 1\n      };\n      return state.map(anecdote => anecdote.id !== action.payload ? anecdote : changedVote);\n    },\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n    setAnecdotes(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const initialiseAnecdotes = () => {\n  return async dispatch => {\n    const anecdotes = await anecdoteService.getAll();\n    dispatch(setAnecdotes(anecdotes));\n  };\n};\nexport const {\n  createAnecdote,\n  voteOf,\n  appendAnecdote,\n  setAnecdotes\n} = anecdoteSlice.actions;\nexport default anecdoteSlice.reducer;","map":{"version":3,"names":["createSlice","anecdoteService","anecdoteSlice","name","initialState","reducers","createAnecdote","state","action","push","payload","voteOf","voteToChange","find","anecdote","id","changedVote","votes","map","appendAnecdote","setAnecdotes","initialiseAnecdotes","dispatch","anecdotes","getAll","actions","reducer"],"sources":["C:/Users/eirfa/Desktop/My Projects/Anecdotes/frontend/src/reducers/anecdoteReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport anecdoteService from '../services/anecdote'\r\n\r\nconst anecdoteSlice = createSlice({\r\n  name: 'anecdotes',\r\n  initialState: [],\r\n  reducers: {\r\n    createAnecdote(state, action) {\r\n      state.push(action.payload)\r\n    },\r\n    voteOf(state, action) {\r\n      const voteToChange = state.find(anecdote => anecdote.id === action.payload)\r\n      const changedVote = { \r\n        ...voteToChange, \r\n        votes: voteToChange.votes + 1 \r\n      }\r\n      return state.map(anecdote =>\r\n        anecdote.id !== action.payload ? anecdote : changedVote \r\n      )     \r\n    },\r\n    appendAnecdote(state, action) {\r\n      state.push(action.payload)\r\n    },\r\n    setAnecdotes(state, action) {\r\n      return action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const initialiseAnecdotes = () => {\r\n  return async dispatch => {\r\n    const anecdotes = await anecdoteService.getAll()\r\n    dispatch(setAnecdotes(anecdotes))\r\n  }\r\n}\r\n\r\nexport const { createAnecdote, voteOf, appendAnecdote, setAnecdotes } = anecdoteSlice.actions\r\nexport default anecdoteSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,eAAe,MAAM,sBAAsB;AAElD,MAAMC,aAAa,GAAGF,WAAW,CAAC;EAChCG,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,cAAc,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDC,MAAM,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACpB,MAAMI,YAAY,GAAGL,KAAK,CAACM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,CAAC;MAC3E,MAAMM,WAAW,GAAG;QAClB,GAAGJ,YAAY;QACfK,KAAK,EAAEL,YAAY,CAACK,KAAK,GAAG;MAC9B,CAAC;MACD,OAAOV,KAAK,CAACW,GAAG,CAACJ,QAAQ,IACvBA,QAAQ,CAACC,EAAE,KAAKP,MAAM,CAACE,OAAO,GAAGI,QAAQ,GAAGE,WAAW,CACxD;IACH,CAAC;IACDG,cAAc,CAACZ,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDU,YAAY,CAACb,KAAK,EAAEC,MAAM,EAAE;MAC1B,OAAOA,MAAM,CAACE,OAAO;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAMW,mBAAmB,GAAG,MAAM;EACvC,OAAO,MAAMC,QAAQ,IAAI;IACvB,MAAMC,SAAS,GAAG,MAAMtB,eAAe,CAACuB,MAAM,EAAE;IAChDF,QAAQ,CAACF,YAAY,CAACG,SAAS,CAAC,CAAC;EACnC,CAAC;AACH,CAAC;AAED,OAAO,MAAM;EAAEjB,cAAc;EAAEK,MAAM;EAAEQ,cAAc;EAAEC;AAAa,CAAC,GAAGlB,aAAa,CAACuB,OAAO;AAC7F,eAAevB,aAAa,CAACwB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}