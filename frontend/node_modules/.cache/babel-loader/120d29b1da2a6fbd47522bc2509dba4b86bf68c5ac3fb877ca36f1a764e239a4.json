{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst getId = () => (100000 * Math.random()).toFixed(0);\nconst asObject = anecdote => {\n  return {\n    content: anecdote,\n    id: getId(),\n    votes: 0\n  };\n};\nconst anecdoteSlice = createSlice({\n  name: 'anecdotes',\n  initialState: [],\n  reducers: {\n    createAnecdote(state, action) {\n      state.push(action.payload);\n    },\n    voteOf(state, action) {\n      const voteToChange = state.find(anecdote => anecdote.id === action.payload);\n      const changedVote = {\n        ...voteToChange,\n        votes: voteToChange.votes + 1\n      };\n      return state.map(anecdote => anecdote.id !== action.payload ? anecdote : changedVote);\n    },\n    appendAnecdote(state, action) {\n      state.push(action.payload);\n    },\n    setAnecdotes(state, action) {\n      return action.payload;\n    }\n  }\n});\nexport const {\n  createAnecdote,\n  voteOf,\n  appendAnecdote,\n  setAnecdotes\n} = anecdoteSlice.actions;\nexport default anecdoteSlice.reducer;","map":{"version":3,"names":["createSlice","getId","Math","random","toFixed","asObject","anecdote","content","id","votes","anecdoteSlice","name","initialState","reducers","createAnecdote","state","action","push","payload","voteOf","voteToChange","find","changedVote","map","appendAnecdote","setAnecdotes","actions","reducer"],"sources":["C:/Users/eirfa/Desktop/My Projects/Anecdotes/frontend/src/reducers/anecdoteReducer.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst getId = () => (100000 * Math.random()).toFixed(0)\r\n\r\nconst asObject = (anecdote) => {\r\n  return {\r\n    content: anecdote,\r\n    id: getId(),\r\n    votes: 0\r\n  }\r\n}\r\n\r\nconst anecdoteSlice = createSlice({\r\n  name: 'anecdotes',\r\n  initialState: [],\r\n  reducers: {\r\n    createAnecdote(state, action) {\r\n      state.push(action.payload)\r\n    },\r\n    voteOf(state, action) {\r\n      const voteToChange = state.find(anecdote => anecdote.id === action.payload)\r\n      const changedVote = { \r\n        ...voteToChange, \r\n        votes: voteToChange.votes + 1 \r\n      }\r\n      return state.map(anecdote =>\r\n        anecdote.id !== action.payload ? anecdote : changedVote \r\n      )     \r\n    },\r\n    appendAnecdote(state, action) {\r\n      state.push(action.payload)\r\n    },\r\n    setAnecdotes(state, action) {\r\n      return action.payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const { createAnecdote, voteOf, appendAnecdote, setAnecdotes } = anecdoteSlice.actions\r\nexport default anecdoteSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,KAAK,GAAG,MAAM,CAAC,MAAM,GAAGC,IAAI,CAACC,MAAM,EAAE,EAAEC,OAAO,CAAC,CAAC,CAAC;AAEvD,MAAMC,QAAQ,GAAIC,QAAQ,IAAK;EAC7B,OAAO;IACLC,OAAO,EAAED,QAAQ;IACjBE,EAAE,EAAEP,KAAK,EAAE;IACXQ,KAAK,EAAE;EACT,CAAC;AACH,CAAC;AAED,MAAMC,aAAa,GAAGV,WAAW,CAAC;EAChCW,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;IACRC,cAAc,CAACC,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDC,MAAM,CAACJ,KAAK,EAAEC,MAAM,EAAE;MACpB,MAAMI,YAAY,GAAGL,KAAK,CAACM,IAAI,CAACf,QAAQ,IAAIA,QAAQ,CAACE,EAAE,KAAKQ,MAAM,CAACE,OAAO,CAAC;MAC3E,MAAMI,WAAW,GAAG;QAClB,GAAGF,YAAY;QACfX,KAAK,EAAEW,YAAY,CAACX,KAAK,GAAG;MAC9B,CAAC;MACD,OAAOM,KAAK,CAACQ,GAAG,CAACjB,QAAQ,IACvBA,QAAQ,CAACE,EAAE,KAAKQ,MAAM,CAACE,OAAO,GAAGZ,QAAQ,GAAGgB,WAAW,CACxD;IACH,CAAC;IACDE,cAAc,CAACT,KAAK,EAAEC,MAAM,EAAE;MAC5BD,KAAK,CAACE,IAAI,CAACD,MAAM,CAACE,OAAO,CAAC;IAC5B,CAAC;IACDO,YAAY,CAACV,KAAK,EAAEC,MAAM,EAAE;MAC1B,OAAOA,MAAM,CAACE,OAAO;IACvB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,cAAc;EAAEK,MAAM;EAAEK,cAAc;EAAEC;AAAa,CAAC,GAAGf,aAAa,CAACgB,OAAO;AAC7F,eAAehB,aAAa,CAACiB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}